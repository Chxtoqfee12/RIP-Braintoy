-- โหลด Orion
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/Chxtoqfee12/script-admin-chx/refs/heads/SRC/ChxOn.lib'))()

-- สร้าง Window
local Window = OrionLib:MakeWindow({
    Name = "ESP + Auto Lock + Speed + NoClip+RemovePlot",
    HidePremium = true,
    SaveConfig = true,
    ConfigFolder = "ChxOnConfig"
})

-- ตัวแปรสวิต
local ESPEnabled = false
local AutoLockEnabled = false
local SpeedEnabled = false
local SpeedValue = 50
local NoClipEnabled = false

-- สร้าง Tab และ Toggle
local Tab = Window:MakeTab({
    Name = "ESP Control",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

Tab:AddToggle({
    Name = "Enable Base ESP",
    Default = false,
    Callback = function(Value)
        ESPEnabled = Value
    end
})

Tab:AddToggle({
    Name = "Enable Auto Lock Base",
    Default = false,
    Callback = function(Value)
        AutoLockEnabled = Value
    end
})

Tab:AddToggle({
    Name = "Enable Speed Boost",
    Default = false,
    Callback = function(Value)
        SpeedEnabled = Value
        if SpeedEnabled then
            local player = game.Players.LocalPlayer
            local character = player.Character or player.CharacterAdded:Wait()
            local humanoid = character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid.WalkSpeed = SpeedValue
            end
        end
    end
})

Tab:AddSlider({
    Name = "Speed Value",
    Min = 16,
    Max = 200,
    Default = 50,
    Color = Color3.fromRGB(255,0,0),
    Increment = 1,
    ValueName = "WalkSpeed",
    Callback = function(Value)
        SpeedValue = Value
    end
})

Tab:AddToggle({
    Name = "Enable NoClip + Remove Plot",
    Default = false,
    Callback = function(Value)
        NoClipEnabled = Value
    end
})

-- เตรียม Bases 1-6
local basesFolder = workspace:WaitForChild("Bases")
local bases = {}
for i = 1, 6 do
    local base = basesFolder:FindFirstChild(tostring(i))
    if base then
        table.insert(bases, base)
    end
end

-- ฟังก์ชันสร้าง ESP
local function createESPLabel(base)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "BaseESP"
    billboard.Adornee = base
    billboard.Size = UDim2.new(0, 200, 0, 80)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.LightInfluence = 0
    billboard.Parent = base

    local text = Instance.new("TextLabel")
    text.Size = UDim2.new(1,0,1,0)
    text.Position = UDim2.new(0,0,0,0)
    text.BackgroundTransparency = 1
    text.TextColor3 = Color3.new(1,0,0)
    text.Font = Enum.Font.Arcade
    text.TextSize = 20
    text.TextStrokeTransparency = 0.5
    text.TextWrapped = true
    text.TextYAlignment = Enum.TextYAlignment.Top
    text.TextXAlignment = Enum.TextXAlignment.Left
    text.Text = "Loading..."
    text.Parent = billboard

    return text
end

-- ESP ทุกฐาน
local ESPTexts = {}
for _, base in ipairs(bases) do
    ESPTexts[base] = createESPLabel(base)
end

-- ฟังก์ชันอ่านเวลา Lock
local function getBaseTime(base)
    local timerLabel = base:FindFirstChild("LockgateButton")
                        and base.LockgateButton:FindFirstChild("Button")
                        and base.LockgateButton.Button:FindFirstChild("LockTimer")
                        and base.LockgateButton.Button.LockTimer:FindFirstChild("Frame")
                        and base.LockgateButton.Button.LockTimer.Frame:FindFirstChild("Timer")

    if timerLabel and timerLabel:IsA("TextLabel") and timerLabel.Text ~= "" then
        local text = timerLabel.Text:lower()
        local minutes = tonumber(text:match("(%d+)m")) or 0
        local seconds = tonumber(text:match("(%d+)s")) or 0
        return minutes * 60 + seconds
    end
    return 0
end

-- ฟังก์ชันอ่านชื่อผู้เล่น
local function getPlayersInBase(base)
    local success, button = pcall(function()
        return base:WaitForChild("LockgateButton"):WaitForChild("Button")
    end)
    if success and button then
        return button:GetAttribute("Player") or ""
    end
    return ""
end

-- ตรวจว่าฐานของเรา
local function isMyBase(base)
    local playersInBase = getPlayersInBase(base)
    return playersInBase == game.Players.LocalPlayer.Name
end

-- AUTO Lock
local function autoLockBase(base)
    local success, button = pcall(function()
        return base:WaitForChild("LockgateButton"):WaitForChild("Button")
    end)
    if success and button then
        local args = { {button, "\006"} }
        local remote = game:GetService("ReplicatedStorage"):WaitForChild("ncxyzero_bridgenet2-fork@1.1.5"):WaitForChild("dataRemoteEvent")
        remote:FireServer(unpack(args))
    end
end

-- อัปเดต ESP + Auto Lock
local function updateESP(base)
    if ESPTexts[base] then
        if ESPEnabled then
            local timeLeft = getBaseTime(base)
            local playersInBase = getPlayersInBase(base)
            local timeText = tostring(timeLeft).."s"

            local displayText = "Base "..base.Name.."\nLock: "..timeText
            if playersInBase ~= "" then
                displayText = displayText.."\nPlayer: "..playersInBase
            end

            ESPTexts[base].Text = displayText

            if AutoLockEnabled and isMyBase(base) and timeLeft <= 0 then
                autoLockBase(base)
            end
        else
            ESPTexts[base].Text = ""
        end
    end
end

-- Heartbeat loop
game:GetService("RunService").Heartbeat:Connect(function()
    for _, base in ipairs(bases) do
        updateESP(base)
    end

    local player = game.Players.LocalPlayer
    local character = player.Character

    -- Speed Lock
    if SpeedEnabled and character then
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid and humanoid.WalkSpeed ~= SpeedValue then
            humanoid.WalkSpeed = SpeedValue
        end
    end

    -- NoClip + Remove PlotTeritory
    if NoClipEnabled and character then
        -- NoClip
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
        -- Remove PlotTeritory ทุกฐาน
        for _, base in ipairs(bases) do
            local plot = base:FindFirstChild("PlotTeritory")
            if plot then
                plot:Destroy()
            end
        end
    end
end)



-- อัปเดตเมื่อ Timer.Text เปลี่ยน
for _, base in ipairs(bases) do
    spawn(function()
        local timerLabel = base:WaitForChild("LockgateButton")
                               :WaitForChild("Button")
                               :WaitForChild("LockTimer")
                               :WaitForChild("Frame")
                               :WaitForChild("Timer")
        timerLabel:GetPropertyChangedSignal("Text"):Connect(function()
            updateESP(base)
        end)
    end)
end

-- เพิ่ม Toggle Infinity Jump ใน Orion
local InfinityJumpEnabled = false

Tab:AddToggle({
    Name = "Enable Infinity Jump",
    Default = false,
    Callback = function(Value)
        InfinityJumpEnabled = Value
    end
})

-- ฟังชั่น Infinity Jump
local UIS = game:GetService("UserInputService")

UIS.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if InfinityJumpEnabled and input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.Space then
            local player = game.Players.LocalPlayer
            local character = player.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                end
            end
        end
    end
end)

-- Invisible variables
local invisRunning = false
local IsInvis = false
local Character, InvisibleCharacter
local bodyPos
local invisDied

local function TurnInvisible()
    if invisRunning or IsInvis then return end
    invisRunning = true

    local player = game.Players.LocalPlayer
    Character = player.Character
    if not Character then invisRunning = false return end
    Character.Archivable = true

    InvisibleCharacter = Character:Clone()
    InvisibleCharacter.Parent = workspace

    for _, v in pairs(InvisibleCharacter:GetDescendants()) do
        if v:IsA("BasePart") then
            v.Transparency = (v.Name == "HumanoidRootPart") and 1 or 0.5
        end
    end

    local root = Character:FindFirstChild("HumanoidRootPart")
    if root then
        root.CFrame = root.CFrame + Vector3.new(0,600,0)
        bodyPos = Instance.new("BodyPosition")
        bodyPos.MaxForce = Vector3.new(1e5,1e5,1e5)
        bodyPos.P = 3e4
        bodyPos.Position = root.Position
        bodyPos.Parent = root
    end

    player.Character = InvisibleCharacter
    IsInvis = true

    local humanoid = InvisibleCharacter:FindFirstChildOfClass("Humanoid")
    if humanoid then
        workspace.CurrentCamera.CameraSubject = humanoid
        invisDied = humanoid.Died:Connect(TurnVisible)
    end

    if InvisibleCharacter:FindFirstChild("Animate") then
        InvisibleCharacter.Animate.Disabled = true
        InvisibleCharacter.Animate.Disabled = false
    end

    invisRunning = false
end

function TurnVisible()
    if not IsInvis then return end

    local player = game.Players.LocalPlayer
    local CF
    local root = player.Character and player.Character:FindFirstChild("HumanoidRootPart")
    if root then CF = root.CFrame end

    if InvisibleCharacter then
        InvisibleCharacter:Destroy()
        InvisibleCharacter = nil
    end

    if Character and Character.Parent then
        player.Character = Character
        if CF and Character:FindFirstChild("HumanoidRootPart") then
            Character.HumanoidRootPart.CFrame = CF
        end
        local humanoid = Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            workspace.CurrentCamera.CameraSubject = humanoid
        end
    end

    if bodyPos then
        bodyPos:Destroy()
        bodyPos = nil
    end

    if Character and Character:FindFirstChild("Animate") then
        Character.Animate.Disabled = true
        Character.Animate.Disabled = false
    end

    if invisDied then
        invisDied:Disconnect()
        invisDied = nil
    end

    IsInvis = false
end

Tab:AddToggle({
    Name = "Invisible",
    Default = false,
    Flag = "InvisibleToggle",
    Callback = function(value)
        if value then
            local success, err = pcall(TurnInvisible)
            if not success then
                warn("TurnInvisible error: "..tostring(err))
            end
        else
            local success, err = pcall(TurnVisible)
            if not success then
                warn("TurnVisible error: "..tostring(err))
            end
        end
    end
})

